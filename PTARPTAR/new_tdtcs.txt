(declare-fun p () Real)
(declare-fun bvg0 () Real)
(declare-fun bvg1 () Real)
(declare-fun bvg2 () Real)
(declare-fun bvi0 () Real)
(declare-fun bvi1 () Real)
(declare-fun bvi2 () Real)
(declare-fun bvi3 () Real)
(declare-fun bvi4 () Real)
(declare-fun bvi5 () Real)
(declare-fun bvi6 () Real)
(assert (and (exists ( (x0 Real)
	(x1 Real)
	(x2 Real)
	(x3 Real)
	(x4 Real)
	(global_time0 Real)
	(global_time1 Real)
	(global_time2 Real)
	(global_time3 Real)
	(global_time4 Real)
	(delta0 Real)
	(delta1 Real)
	(delta2 Real)
	(delta3 Real))
(and (and (>= delta0 0)
	(>= delta1 0)
	(>= delta2 0)
	(>= delta3 0))
(and (= x3 0))
(and (= x1 (+ x0 delta0))
	(= global_time1 (+ global_time0 delta0))
	(= x2 (+ x1 delta1))
	(= global_time2 (+ global_time1 delta1))
	(= global_time3 (+ global_time2 delta2))
	(= x4 (+ x3 delta3))
	(= global_time4 (+ global_time3 delta3)))
(and (<= x0 (+ 2 bvg0))
	(<= x1 (+ 2 bvg1))
	(<= x2 (+ p bvg2))
	(<= x0 (+ 2 bvi0))
	(<= (+ x0 delta0) (+ 2 bvi0))
	(>= x0 (+ 0 bvi1))
	(>= (+ x0 delta0) (+ 0 bvi1))
	(<= x1 (+ 2 bvi2))
	(<= (+ x1 delta1) (+ 2 bvi2))
	(< x1 (+ 4 bvi3))
	(< (+ x1 delta1) (+ 4 bvi3))
	(<= x2 (+ 4 bvi4))
	(<= (+ x2 delta2) (+ 4 bvi4))
	(< x2 (+ 4 bvi5))
	(< (+ x2 delta2) (+ 4 bvi5))
	(<= x3 (+ 4 bvi6))
	(<= (+ x3 delta3) (+ 4 bvi6))
	(>= (+ 2 bvg0) 0)
	(>= (+ 2 bvg1) 0)
	(>= (+ p bvg2) 0)
	(>= (+ 2 bvi0) 0)
	(>= (+ 0 bvi1) 0)
	(>= (+ 2 bvi2) 0)
	(>= (+ 4 bvi3) 0)
	(>= (+ 4 bvi4) 0)
	(>= (+ 4 bvi5) 0)
	(>= (+ 4 bvi6) 0))

(and (= global_time0 0)
	(= x0 0)
	(>= p 0)
	(<= p 5)))) 
(forall ( (x0 Real)
	(x1 Real)
	(x2 Real)
	(x3 Real)
	(x4 Real)
	(global_time0 Real)
	(global_time1 Real)
	(global_time2 Real)
	(global_time3 Real)
	(global_time4 Real)
	(delta0 Real)
	(delta1 Real)
	(delta2 Real)
	(delta3 Real))
(and (and (>= delta0 0)
	(>= delta1 0)
	(>= delta2 0)
	(>= delta3 0))
(and (= x3 0))
(and (= x1 (+ x0 delta0))
	(= global_time1 (+ global_time0 delta0))
	(= x2 (+ x1 delta1))
	(= global_time2 (+ global_time1 delta1))
	(= global_time3 (+ global_time2 delta2))
	(= x4 (+ x3 delta3))
	(= global_time4 (+ global_time3 delta3)))
(and (<= x0 (+ 2 bvg0))
	(<= x1 (+ 2 bvg1))
	(<= x2 (+ p bvg2))
	(<= x0 (+ 2 bvi0))
	(<= (+ x0 delta0) (+ 2 bvi0))
	(>= x0 (+ 0 bvi1))
	(>= (+ x0 delta0) (+ 0 bvi1))
	(<= x1 (+ 2 bvi2))
	(<= (+ x1 delta1) (+ 2 bvi2))
	(< x1 (+ 4 bvi3))
	(< (+ x1 delta1) (+ 4 bvi3))
	(<= x2 (+ 4 bvi4))
	(<= (+ x2 delta2) (+ 4 bvi4))
	(< x2 (+ 4 bvi5))
	(< (+ x2 delta2) (+ 4 bvi5))
	(<= x3 (+ 4 bvi6))
	(<= (+ x3 delta3) (+ 4 bvi6))
	(>= (+ 2 bvg0) 0)
	(>= (+ 2 bvg1) 0)
	(>= (+ p bvg2) 0)
	(>= (+ 2 bvi0) 0)
	(>= (+ 0 bvi1) 0)
	(>= (+ 2 bvi2) 0)
	(>= (+ 4 bvi3) 0)
	(>= (+ 4 bvi4) 0)
	(>= (+ 4 bvi5) 0)
	(>= (+ 4 bvi6) 0))

(and (= global_time0 0)
	(= x0 0)
	(>= p 0)
	(<= p 5))))))
(assert-soft (and (= bvg0 0)
	(= bvg1 0)
	(= bvg2 0)
	(= bvi0 0)
	(= bvi1 0)
	(= bvi2 0)
	(= bvi3 0)
	(= bvi4 0)
	(= bvi5 0)
	(= bvi6 0)))
(apply qe)
(check-sat)
(get-model)
